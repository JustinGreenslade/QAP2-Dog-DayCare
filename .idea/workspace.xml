<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="91edffab-940d-4bb7-a905-5395ded1147d" name="Changes" comment="Finished QAP 2 Spring-boot project on my Dog Daycare project;&#10;- Set up pom.xml with Spring Boot, web, JPA, MySQL, and Swagger, like class example (Kept some extras for future reference)&#10;- Configured application.properties for MySQL dog_daycare database&#10;- Made Dog.java with NOT NULL fields (name, breed, isVaccinated, owner, age)&#10;- Added DogRepository.java with findByName and findByOwner queries&#10;- Wrote DogService.java for CRUD logic&#10;- Created DogController.java with /api/dogs endpoints and added search options&#10;- Set up DogDaycareCrudApplication.java to run app&#10;- Formatted code like class examples, doing additional tests with Swagger/Postman tomorrow plus screenshots." />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Interface" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;JustinGreenslade&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/JustinGreenslade/QAP2-Dog-DayCare.git&quot;,
    &quot;accountId&quot;: &quot;a98e8a5b-b1d6-4afe-8181-bcb11b1c1748&quot;
  }
}</component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
    <option name="showPreview" value="true" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 1
}</component>
  <component name="ProjectId" id="33wLffoSnAItzuzRGwP1YacKpn1" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;Application.DdcApplication.executor&quot;: &quot;Debug&quot;,
    &quot;Application.DogApplication.executor&quot;: &quot;Run&quot;,
    &quot;Application.DogDaycareCrudApplication.executor&quot;: &quot;Run&quot;,
    &quot;Maven.QAP2-Dog-DayCare [compile].executor&quot;: &quot;Run&quot;,
    &quot;Maven.QAP2-Dog-DayCare [deploy].executor&quot;: &quot;Run&quot;,
    &quot;Maven.QAP2-Dog-DayCare [package].executor&quot;: &quot;Run&quot;,
    &quot;Maven.QAP2-Dog-DayCare [test].executor&quot;: &quot;Run&quot;,
    &quot;ModuleVcsDetector.initialDetectionPerformed&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/src/main/java/com/justingreenslade/dog" />
    </key>
    <key name="MoveClassesOrPackagesDialog.RECENTS_KEY">
      <recent name="com.justingreenslade" />
      <recent name="com" />
    </key>
  </component>
  <component name="RunManager">
    <configuration name="DogDaycareCrudApplication" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="com.QAP2.DogDaycareCrudApplication" />
      <module name="QAP2-Dog-DayCare" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.QAP2.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Application.DogDaycareCrudApplication" />
      </list>
    </recent_temporary>
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="91edffab-940d-4bb7-a905-5395ded1147d" name="Changes" comment="" />
      <created>1754261541851</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1754261541851</updated>
    </task>
    <servers />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Finished QAP 2 Spring-boot project on my Dog Daycare project;&#10;- Set up pom.xml with Spring Boot, web, JPA, MySQL, and Swagger, like class example (Kept some extras for future reference)&#10;- Configured application.properties for MySQL dog_daycare database&#10;- Made Dog.java with NOT NULL fields (name, breed, isVaccinated, owner, age)&#10;- Added DogRepository.java with findByName and findByOwner queries&#10;- Wrote DogService.java for CRUD logic&#10;- Created DogController.java with /api/dogs endpoints and added search options&#10;- Set up DogDaycareCrudApplication.java to run app&#10;- Formatted code like class examples, doing additional tests with Swagger/Postman tomorrow plus screenshots." />
    <option name="LAST_COMMIT_MESSAGE" value="Finished QAP 2 Spring-boot project on my Dog Daycare project;&#10;- Set up pom.xml with Spring Boot, web, JPA, MySQL, and Swagger, like class example (Kept some extras for future reference)&#10;- Configured application.properties for MySQL dog_daycare database&#10;- Made Dog.java with NOT NULL fields (name, breed, isVaccinated, owner, age)&#10;- Added DogRepository.java with findByName and findByOwner queries&#10;- Wrote DogService.java for CRUD logic&#10;- Created DogController.java with /api/dogs endpoints and added search options&#10;- Set up DogDaycareCrudApplication.java to run app&#10;- Formatted code like class examples, doing additional tests with Swagger/Postman tomorrow plus screenshots." />
  </component>
</project>